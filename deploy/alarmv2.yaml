apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: alarmv2
  name: alarmv2
  namespace: xxxxx
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: alarmv2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: alarmv2
    spec:
      containers:
      - image: harbor.inner.galaxy.xxxxx.com/xxxxx/alarmv2:latest
        imagePullPolicy: Always
        name: alarmv2
        volumeMounts:
        - mountPath: /app/conf/
          name: config-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccountName: xxxxx-alarm
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 0644
          name: alarmv2-config
          items:
            - key: base.yaml
              path: base.yaml
            - key: mysql.yaml
              path: mysql.yaml
            - key: redis.yaml
              path: redis.yaml
        name: config-volume
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: alarmv2
  name: alarmv2
  namespace: xxxxx
spec:
  ports:
  - port: 80
    name: "alarmv2"
    protocol: TCP
    targetPort: 8080
  selector:
    app: alarmv2
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name: alarmv2
  namespace: xxxxx
spec:
  gateways:
  - alarmv2-gateway
  hosts:
  - xxxxx.alarmv2.galaxy.cloud
  http:
  - corsPolicy:
      allowCredentials: true
      allowHeaders:
      - '*'
      allowMethods:
      - GET
      - POST
      - PATCH
      - PUT
      - DELETE
      - OPTIONS
      allowOrigins:
      - exact: '*'
      maxAge: 24h
    route:
    - destination:
        host: alarmv2
---
apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: alarmv2-gateway
  namespace: xxxxx
spec:
  selector:
    istio: ingressgateway
  servers:
  - hosts:
    - xxxxx.alarmv2.galaxy.cloud
    port:
      name: https
      number: 443
      protocol: HTTPS
    tls:
      mode: PASSTHROUGH
  - hosts:
    - xxxxx.alarmv2.galaxy.cloud
    port:
      name: http
      number: 80
      protocol: HTTP
